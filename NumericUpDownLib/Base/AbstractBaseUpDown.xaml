<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:NumericUpDownLib.Base"
    xmlns:controls="clr-namespace:NumericUpDownLib"
    xmlns:conv="clr-namespace:NumericUpDownLib.Converters"
    >

    <Style x:Key="InputBaseUpDownStyle" TargetType="{x:Type local:InputBaseUpDown}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InputBaseUpDown}">
                    <Grid VerticalAlignment="Top">
                        <Grid.Resources>
                            <conv:ByteToPlaceHolderStringConverter x:Key="ByteToPlaceHolderStringConverter" />
                            <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityConverter" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0" Grid.RowSpan="2">
                            <TextBox
                                x:Name="PART_TextBox"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"
                                Margin="0,0,1,0"
                                Padding="0"
                                TextAlignment="Right"
                                AcceptsReturn="False"
                                SpellCheck.IsEnabled="False"
                                HorizontalContentAlignment="Right"
                                VerticalContentAlignment="Center"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                            />

                            <!-- Hidden measuring textbox ensure reservation of enough UI space
                                 according to DisplayLength dependency property
                            -->
                            <TextBox x:Name="PART_Measuring_Element"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisplayLength, Converter={StaticResource ByteToPlaceHolderStringConverter}}"
                                Margin="0,0,1,0"    
                                TextAlignment="Right"
                                AcceptsReturn="False"
                                SpellCheck.IsEnabled="False"
                                HorizontalContentAlignment="Right"
                                VerticalContentAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Visibility="Hidden"/>
                        </Grid>

                        <!-- ArrowUp Increase value button -->
                        <local:NumericRepeatButtonControl
                            x:Name="PART_IncrementButton"
                            Grid.Column="1" Grid.Row="0"
                            RepeatButtonContent="M 337.57757568359375,322 C337.57757568359375,322 334,326 334,326 334,326 341,326 341,326 341,326 337.57757568359375,322 337.57757568359375,322 z"
                            ClickCommand="{x:Static local:InputBaseUpDown.IncreaseCommand}"
                            Visibility="{Binding Path=IsIncDecButtonsVisible,RelativeSource={RelativeSource AncestorType={x:Type local:InputBaseUpDown}}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"
                            HorizontalAlignment="Left"
                        />

                        <!-- ArrowDown Decrease value button -->
                        <local:NumericRepeatButtonControl
                            x:Name="PART_DecrementButton"
                            Grid.Column="1" Grid.Row="1"
                            RepeatButtonContent="M 0 0 L 4 4 L 8 0 Z"
                            ClickCommand="{x:Static local:InputBaseUpDown.DecreaseCommand}"
                            Visibility="{Binding Path=IsIncDecButtonsVisible,RelativeSource={RelativeSource AncestorType={x:Type local:InputBaseUpDown}}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"
                            HorizontalAlignment="Left"
                        />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
        </Style.Triggers>
    </Style>

    <!-- Styles a byte based numeric up down control based on the InputBaseUpDown control style -->
    <Style TargetType="{x:Type controls:ByteUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <Style TargetType="{x:Type controls:DecimalUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <Style TargetType="{x:Type controls:DoubleUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <Style TargetType="{x:Type controls:LongUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <!-- Styles an Integer based numeric up down control based on the InputBaseUpDown control style -->
    <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <Style TargetType="{x:Type controls:SByteUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <Style TargetType="{x:Type controls:ShortUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <Style TargetType="{x:Type controls:FloatUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

    <Style TargetType="{x:Type controls:UIntegerUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />
    <Style TargetType="{x:Type controls:UShortUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />
    <Style TargetType="{x:Type controls:ULongUpDown}" BasedOn="{StaticResource InputBaseUpDownStyle}" />

</ResourceDictionary>